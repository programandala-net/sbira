1 rem 'zx_beep' procedure for S*BASIC
2 rem that simulates the ZX Spectrum's 'beep' command
3 rem Version 0.1.0+201709180046
4 defproc zx_beep(duration,tone)
5 beep duration*500000/72,ql_pitch%(tone+zx_middle_c_offset)
6 repeat zx_beep_wait
7 if not beeping:exit zx_beep_wait
8 endrep zx_beep_wait
9 enddef
10 defproc init_zx_beep
11 loc i,pitchs%,pitchs_per_data%,middle_c_hz
12 let middle_c_hz=261.60
13 let pitchs_per_data%=6
14 let pitchs%=(42-24)*pitchs_per_data%
15 dim ql_pitch%(pitchs%-1)
16 restore 24
17 for i=0 to pitchs%-1
18 read hz
19 if hz=middle_c_hz:let zx_middle_c_offset=i:print "middle C -->"
20 let ql_pitch%(i)=11447/hz-10.6
21 print i,ql_pitch%(i):pause
22 endfor i
23 enddef
24 data 0016.35, 0017.32, 0018.35, 0019.45, 0020.60, 0021.83
25 data 0023.12, 0024.50, 0025.96, 0027.50, 0029.14, 0030.87
26 data 0032.70, 0034.65, 0036.71, 0038.89, 0041.20, 0043.65
27 data 0046.25, 0049.00, 0051.91, 0055.00, 0058.27, 0061.74
28 data 0065.41, 0069.30, 0073.42, 0077.78, 0082.41, 0087.31
29 data 0092.50, 0098.00, 0103.80, 0110.00, 0116.50, 0123.50
30 data 0130.80, 0138.60, 0146.80, 0155.60, 0164.80, 0174.60
31 data 0185.00, 0196.00, 0207.70, 0220.00, 0233.10, 0246.90
32 data 0261.60, 0277.20, 0293.70, 0311.10, 0329.60, 0349.20
33 data 0370.00, 0392.00, 0415.30, 0440.00, 0466.20, 0493.90
34 data 0523.30, 0554.40, 0587.30, 0622.30, 0659.30, 0698.50
35 data 0740.00, 0784.00, 0830.60, 0880.00, 0932.30, 0987.80
36 data 1047.00, 1109.00, 1175.00, 1245.00, 1319.00, 1397.00
37 data 1480.00, 1568.00, 1661.00, 1760.00, 1865.00, 1976.00
38 data 2093.00, 2217.00, 2349.00, 2489.00, 2637.00, 2794.00
39 data 2960.00, 3136.00, 3322.00, 3520.00, 3729.00, 3951.00
40 data 4186.00, 4435.00, 4699.00, 4978.00, 5274.00, 5588.00
41 data 5920.00, 6272.00, 6645.00, 7040.00, 7459.00, 7902.00

