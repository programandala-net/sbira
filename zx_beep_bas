1 rem 'zx_beep' procedure for S*BASIC
2 rem that simulates the ZX Spectrum's 'beep' command
3 rem Version 0.4.0+201709181828
4 defproc zx_beep(duration,tone%)
5 loc pitch%
6 repeat zx_beep_busy:if not beeping:exit zx_beep_busy
7 let pitch%=tone%+zx_beep_middle_c_offset%
8 if pitch%>=0 and pitch%<=zx_beep_last_pitch%:beep zx_beep_tempo*duration*1000000/72,ql_pitch%(pitch%)
9 enddef
10 defproc init_zx_beep
11 loc i,middle_c_pitch%
12 let zx_beep_tempo=2.1
13 let middle_c_pitch%=33
14 restore 28
15 zx_beep_last_pitch%=0
16 rep count_data
17 read i
18 if i=-1:exit count_data
19 let zx_beep_last_pitch%=zx_beep_last_pitch%+1
20 endrep count_data
21 dim ql_pitch%(zx_beep_last_pitch%)
22 restore 28
23 for i=0 to zx_beep_last_pitch%
24 read ql_pitch%(i)
25 if ql_pitch%(i)=middle_c_pitch%:let zx_beep_middle_c_offset%=i
26 endfor i
27 enddef
28 data 000
29 data 001
30 data 002
31 data 003
32 data 004
33 data 005
34 data 006
35 data 007
36 data 008
37 data 009
38 data 010
39 data 011
40 data 012
41 data 014
42 data 015
43 data 017
44 data 019
45 data 020
46 data 022
47 data 024
48 data 026
49 data 028
50 data 031
51 data 033
52 data 036
53 data 039
54 data 041
55 data 045
56 data 048
57 data 051
58 data 055
59 data 059
60 data 063
61 data 067
62 data 072
63 data 077
64 data 082
65 data 088
66 data 093
67 data 100
68 data 106
69 data 113
70 data 121
71 data 128
72 data 137
73 data 145
74 data 155
75 data 164
76 data 175
77 data 186
78 data 198
79 data 210
80 data 223
81 data 237
82 data 252
83 data -1

